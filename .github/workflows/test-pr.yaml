name: Build Image on PR

on:
  pull_request:
    branches:
        - "*"

jobs:

  # run tests
  test-backend:
    name: Run Backend Jest Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23.5.0' 

      - name: Install dependencies
        run: npm ci
      
      - name: Ensure output directory exists
        run: mkdir -p output

      - name: Run Jest tests
        run: npm test
      
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: jest-results
          path: ./pmc-portal-be/output/test-results.xml
      
  # run linting

  build-verify-image:
    name: build-verify-image
    runs-on: ubuntu-latest
    environment: testing

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create .secret folder
        run: mkdir .secret

      - name: Create env file
        run: |
          touch .secret/.env
          echo ORIGIN=${{ secrets.ORIGIN }} >> .env
          echo BUCKET_NAME=${{ secrets.BUCKET_NAME }} >> .env
          echo STRIPE_SECRET=${{ secrets.STRIPE_SECRET }} >> .env
          echo FIRESTORE_DATABASE_ID=${{ secrets.FIRESTORE_DATABASE_ID }} >> .env

      - name: Create Credential JSON
        id: create-json-1
        uses: jsdaniell/create-json@v1.2.2
        with:
          name: "pmc-portal-credential.json"
          json: ${{ secrets.GCLOUD_AUTH }}
          dir: ".secret/"

      - name: Build the Docker image
        run: |
            set -e
            echo "Building Docker image."
            docker build -t pmc-portal-fe:${{ github.event.pull_request.number }} .
            echo "Docker image successfully created."
            
      - name: Verify Docker image
        run: |
            set -e
            echo "Verifying Docker image exists..."    
            docker images pmc-portal-fe:${{ github.event.pull_request.number }}
            echo "Docker image verified."

      - name: Remove Docker image
        run: |
            set -e
            echo "Deleting Docker image..."
            docker rmi pmc-portal-fe:${{ github.event.pull_request.number }}
            echo "Docker image deleted."
            

