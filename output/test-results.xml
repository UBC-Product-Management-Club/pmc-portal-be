<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="40" failures="0" errors="0" time="5.302">
  <testsuite name="register service" errors="0" failures="0" skipped="0" timestamp="2025-08-04T01:29:55" time="4.372" tests="3">
    <testcase classname="register service throws error when onboarding existing user" name="register service throws error when onboarding existing user" time="0.018">
    </testcase>
    <testcase classname="register service adds a new user to database" name="register service adds a new user to database" time="0.002">
    </testcase>
    <testcase classname="register service throws when adding a user fails" name="register service throws when adding a user fails" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="login sevice" errors="0" failures="0" skipped="0" timestamp="2025-08-04T01:29:54" time="4.412" tests="4">
    <testcase classname="login sevice throws error if no userId is provided" name="login sevice throws error if no userId is provided" time="0.014">
    </testcase>
    <testcase classname="login sevice returns user data if userId is valid" name="login sevice returns user data if userId is valid" time="0.002">
    </testcase>
    <testcase classname="login sevice throws error if Supabase returns an error object" name="login sevice throws error if Supabase returns an error object" time="0.011">
    </testcase>
    <testcase classname="login sevice throws error if maybeSingle() itself throws" name="login sevice throws error if maybeSingle() itself throws" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="getSupabaseEvents" errors="0" failures="0" skipped="0" timestamp="2025-08-04T01:29:54" time="4.41" tests="13">
    <testcase classname="getSupabaseEvents returns event list successfully" name="getSupabaseEvents returns event list successfully" time="0.009">
    </testcase>
    <testcase classname="getSupabaseEvents throws error when supabase returns an error" name="getSupabaseEvents throws error when supabase returns an error" time="0.014">
    </testcase>
    <testcase classname="getSupabaseEvents throws error on unexpected exception" name="getSupabaseEvents throws error on unexpected exception" time="0.008">
    </testcase>
    <testcase classname="getSupabaseEventsById returns event" name="getSupabaseEventsById returns event" time="0.002">
    </testcase>
    <testcase classname="getSupabaseEventsById throws an error when supabase returns an error" name="getSupabaseEventsById throws an error when supabase returns an error" time="0.002">
    </testcase>
    <testcase classname="getSupabaseEventsById throws an error when data is null" name="getSupabaseEventsById throws an error when data is null" time="0.001">
    </testcase>
    <testcase classname="getSupabaseEventsById throws on unexpected exception" name="getSupabaseEventsById throws on unexpected exception" time="0.002">
    </testcase>
    <testcase classname="addSupabaseEvent successfully inserts event" name="addSupabaseEvent successfully inserts event" time="0.001">
    </testcase>
    <testcase classname="addSupabaseEvent throws if required fields are missing" name="addSupabaseEvent throws if required fields are missing" time="0.001">
    </testcase>
    <testcase classname="addSupabaseEvent throws if date format invalid" name="addSupabaseEvent throws if date format invalid" time="0.005">
    </testcase>
    <testcase classname="addSupabaseEvent throws if start_time format invalid" name="addSupabaseEvent throws if start_time format invalid" time="0">
    </testcase>
    <testcase classname="addSupabaseEvent throws if end_time format invalid" name="addSupabaseEvent throws if end_time format invalid" time="0.001">
    </testcase>
    <testcase classname="addSupabaseEvent throws if supabase insert returns error" name="addSupabaseEvent throws if supabase insert returns error" time="0">
    </testcase>
  </testsuite>
  <testsuite name="sendEmail" errors="0" failures="0" skipped="0" timestamp="2025-08-04T01:29:54" time="4.471" tests="1">
    <testcase classname="sendEmail successfully sends email" name="sendEmail successfully sends email" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="checkValidAttendee" errors="0" failures="0" skipped="0" timestamp="2025-08-04T01:29:55" time="4.612" tests="15">
    <testcase classname="checkValidAttendee validation errors should throw error for missing required fields" name="checkValidAttendee validation errors should throw error for missing required fields" time="0.016">
    </testcase>
    <testcase classname="checkValidAttendee validation errors should throw error when event not found" name="checkValidAttendee validation errors should throw error when event not found" time="0.001">
    </testcase>
    <testcase classname="checkValidAttendee validation errors should throw error when user already registered" name="checkValidAttendee validation errors should throw error when user already registered" time="0.001">
    </testcase>
    <testcase classname="checkValidAttendee validation errors should throw error when event is full" name="checkValidAttendee validation errors should throw error when event is full" time="0.001">
    </testcase>
    <testcase classname="checkValidAttendee validation errors should throw error when counting attendees fails" name="checkValidAttendee validation errors should throw error when counting attendees fails" time="0.001">
    </testcase>
    <testcase classname="checkValidAttendee should not throw when all validations pass" name="checkValidAttendee should not throw when all validations pass" time="0">
    </testcase>
    <testcase classname="addSupabaseAttendee successful registration should create attendee with full data" name="addSupabaseAttendee successful registration should create attendee with full data" time="0.001">
    </testcase>
    <testcase classname="addSupabaseAttendee successful registration should handle free events and minimal data" name="addSupabaseAttendee successful registration should handle free events and minimal data" time="0">
    </testcase>
    <testcase classname="addSupabaseAttendee error handling should throw error for validation failures" name="addSupabaseAttendee error handling should throw error for validation failures" time="0.001">
    </testcase>
    <testcase classname="addSupabaseAttendee error handling should throw error when event not found" name="addSupabaseAttendee error handling should throw error when event not found" time="0">
    </testcase>
    <testcase classname="addSupabaseAttendee error handling should throw error when user already registered" name="addSupabaseAttendee error handling should throw error when user already registered" time="0.001">
    </testcase>
    <testcase classname="addSupabaseAttendee error handling should throw error when event is full" name="addSupabaseAttendee error handling should throw error when event is full" time="0">
    </testcase>
    <testcase classname="addSupabaseAttendee error handling should throw error when insert fails" name="addSupabaseAttendee error handling should throw error when insert fails" time="0.001">
    </testcase>
    <testcase classname="registerGuestForEvent registers a guest who does not already exist" name="registerGuestForEvent registers a guest who does not already exist" time="0.001">
    </testcase>
    <testcase classname="registerGuestForEvent registers a guest who already exists (skips insert)" name="registerGuestForEvent registers a guest who already exists (skips insert)" time="0">
    </testcase>
  </testsuite>
  <testsuite name="createPaymentIntent" errors="0" failures="0" skipped="0" timestamp="2025-08-04T01:29:55" time="4.713" tests="4">
    <testcase classname="createPaymentIntent creates payment intent for UBC student" name="createPaymentIntent creates payment intent for UBC student" time="0.007">
    </testcase>
    <testcase classname="createPaymentIntent creates payment intent for non-UBC student" name="createPaymentIntent creates payment intent for non-UBC student" time="0.001">
    </testcase>
    <testcase classname="createPaymentIntent throws error when user lookup fails" name="createPaymentIntent throws error when user lookup fails" time="0.003">
    </testcase>
    <testcase classname="createPaymentIntent throws error when payment insertion fails" name="createPaymentIntent throws error when payment insertion fails" time="0.001">
    </testcase>
  </testsuite>
</testsuites>